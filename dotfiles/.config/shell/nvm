# NVM (Node Version Manager) - Fast Loading

# Install NVM if not present
if [[ ! -d "$HOME/.nvm" ]]; then
    echo "NVM is not installed. Installing..."
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
fi

# NVM setup with lazy loading for performance
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"

# Add npm global packages to PATH immediately (for tools like claude)
if [[ -d "$NVM_DIR" ]]; then
    if [[ -f "$NVM_DIR/alias/default" ]]; then
        ALIAS_CONTENT=$(cat "$NVM_DIR/alias/default")

        if [[ "$ALIAS_CONTENT" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            DEFAULT_NODE_VERSION="$ALIAS_CONTENT"
        elif [[ "$ALIAS_CONTENT" == "node" || "$ALIAS_CONTENT" =~ ^lts/.*$ ]]; then
            # Try resolve alias file, else fallback to latest installed
            if [[ -f "$NVM_DIR/alias/$ALIAS_CONTENT" ]]; then
                DEFAULT_NODE_VERSION=$(cat "$NVM_DIR/alias/$ALIAS_CONTENT")
            else
                DEFAULT_NODE_VERSION=$(ls -1 "$NVM_DIR/versions/node" | sort -V | tail -1)
            fi
        else
            # Unexpected alias name, fallback to latest
            DEFAULT_NODE_VERSION=$(ls -1 "$NVM_DIR/versions/node" | sort -V | tail -1)
        fi

        NPM_GLOBAL_PATH="$NVM_DIR/versions/node/$DEFAULT_NODE_VERSION/bin"
        [[ -d "$NPM_GLOBAL_PATH" ]] && export PATH="$NPM_GLOBAL_PATH:$PATH"

    elif [[ -d "$NVM_DIR/versions/node" ]]; then
        LATEST_NODE=$(ls -1 "$NVM_DIR/versions/node" | sort -V | tail -1)
        if [[ -n "$LATEST_NODE" ]]; then
            NPM_GLOBAL_PATH="$NVM_DIR/versions/node/$LATEST_NODE/bin"
            [[ -d "$NPM_GLOBAL_PATH" ]] && export PATH="$NPM_GLOBAL_PATH:$PATH"
        fi
    fi
fi